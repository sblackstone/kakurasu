{"version":3,"sources":["Board.js","NewGameScreen.js","PlayerWinScreen.js","GameModel.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","content","viewState","playerBoard","row","col","className","onClick","onSquareClick","size","HSquare","i","FSquare","playerVal","colSums","targetVal","targetColSums","antiPlayerVal","antiColSums","content1","content2","antiTargetColSums","RowStartSquare","RowEndSquare","rowSums","targetRowSums","antiRowSums","antiTargetRowSums","SigmaSquare","sigma","Header","result","push","Footer","Squares","Board","LevelOptions","min","max","value","NewGameForm","defaultLevel","Cookies","get","useState","parseFloat","newLevel","setNewLevel","Fragment","onChange","e","currentTarget","set","onNewGame","NewGameScreen","PlayerWinScreen","GameModel","this","initPlayerBoard","initTargetBoard","targetBoard","j","Math","random","boardName","targetChar","sum","state","map","x","slice","wonGame","checkWin","console","log","y","App","gm","setGm","setViewState","newSize","newGm","export","window","toggleSquare","debug","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb210c45.chunk.js","sourcesContent":["function Square(props) {\n  const content = props.viewState.playerBoard[props.row][props.col];\n  let className = \"\";\n  if (content === \"*\") {\n    className = \"piece piece-on\";\n  } else if (content === \"x\") {\n    className = \"piece piece-off\";\n  } else {\n    className = \"piece piece-blank\"\n  }\n\n  return (\n    <div onClick={()=> { props.onSquareClick(props.row, props.col)}} className={`square square-${props.size}`}>\n      <div className={`piece ${className}`}></div>\n    </div> \n  );\n}\n\nfunction HSquare(props) {\n  let content = \"\";\n  \n  if (props.i > 0 && (props.i < props.size+1)) {\n    content = props.i;\n    return (\n      <div className={`square header-square square-${props.size}`}>{content}</div>\n    );\n  } else {\n    return (\n      <div className={`square header-square row-start-square square-${props.size}`}>{content}</div>\n    );    \n  }\n}\n\n\nfunction FSquare(props) {\n  \n  if (props.i > 0 && (props.i < props.size+1)) {\n    const playerVal = props.viewState.colSums[props.i-1];\n    const targetVal = props.viewState.targetColSums[props.i-1];\n\n    const antiPlayerVal = props.viewState.antiColSums[props.i -1];\n    const antiTargetVal = props.viewState.antiTargetColSums[props.i - 1];\n\n    const content1 = targetVal - playerVal;\n    const content2 = antiTargetVal- antiPlayerVal;\n    \n    return (\n      <div className={`square footer-square square-${props.size}`}>\n      <div className=\"score-on\">{content1}</div>\n      <br/>\n      <div className=\"score-off\">{content2}</div>\n      </div> \n    );\n\n  }\n\n\n  if (props.i === 0) {\n    return (\n      <div className={`square footer-square row-start-square square-${props.size}`}></div> \n    ); \n  }\n\n  return (\n    <div className={`square footer-square row-end-square square-${props.size}`}></div> \n  );\n}\n\n\nfunction RowStartSquare(props) {\n  return (\n    <div className={`square row-start-square square-${props.size}`}>{props.i}</div> \n  );\n}\n\nfunction RowEndSquare(props) {\n  const playerVal = props.viewState.rowSums[props.row];\n  const targetVal = props.viewState.targetRowSums[props.row];\n  const antiPlayerVal = props.viewState.antiRowSums[props.row];\n  const antiTargetVal = props.viewState.antiTargetRowSums[props.row];\n\n\n  const content1 = targetVal - playerVal;\n  const content2 = antiTargetVal- antiPlayerVal;\n\n  return (\n    <div className={`square row-end-square square-${props.size}`}>\n    <div className=\"score-on\">{content1}</div>\n    <br/>\n    <div className=\"score-off\">{content2}</div>\n    </div> \n  );\n}\n\n\nfunction SigmaSquare(props) {\n  return (\n    <div className={`square sigma-square row-end-square header-square square-${props.size}`}>&Sigma;{props.viewState.sigma}</div>    \n  );\n}\n\nfunction Header(props) {\n  let result = [];\n  for (let i = 0; i < props.size +1; i++) {\n    result.push(<HSquare key={`hs${i}`} i={i} {...props} />);\n  }\n  result.push(<SigmaSquare {...props} />);\n  return result;\n};\n\nfunction Footer(props) {\n  let result = [];\n  for (let i = 0; i < props.size +2; i++) {\n    result.push(<FSquare key={`fs${i}`} i={i} {...props} />);\n  }\n  return result;\n};\n\nfunction Squares(props) {\n  let result = [ <Header key={\"headerSquares\"} {...props} />];\n  for (let i = 0; i < (props.size + 2)*(props.size); i++) {\n    const col = i % (props.size + 2);\n    const row = (i - col) / (props.size + 2);\n    if (col === 0) {\n      result.push(<RowStartSquare key={`rss${i}`} i={row+1} {...props} />);    \n    } else if (col === (props.size + 1)) {\n      result.push(<RowEndSquare key={`res${row}`} row={row} {...props} />);    \n    } else {\n      result.push(<Square key={`reg${i}`} i={i} row={row} col={col-1} {...props} />);\n    }\n  }\n  return [...result, <Footer key={\"footerSquares\"} {...props} />];\n}\n\nexport function Board(props) {\n  return (\n    <div className=\"board\">\n      <Squares {...props} />\n    </div>\n  )\n}\n\n","import { useState } from 'react';\nimport React from 'react';\nimport Cookies from 'js-cookie';\n\n\nfunction LevelOptions(props) {\n  let result = [];\n  for (let i = props.min; i <= props.max; i++) {\n      result.push(\n        <option value={i}>{i}x{i}</option>\n      )\n  }\n  return result;\n}\n\n\nexport function NewGameForm(props) {\n  \n  const defaultLevel = Cookies.get('defaultLevel') || 5;\n  \n  const [ newLevel, setNewLevel ] = useState(parseFloat(defaultLevel));\n\n    return (\n      <React.Fragment>\n        <select value={newLevel} onChange={(e)=> { setNewLevel(parseFloat(e.currentTarget.value)); Cookies.set('defaultLevel', e.currentTarget.value) }} >\n          <LevelOptions min={3} max={13} />\n        </select>\n        <button onClick={()=> { props.onNewGame(newLevel)}}>Play</button>\n      </React.Fragment>\n      \n    )\n}\n\n\nexport function NewGameScreen(props) {\n\n\n  return (\n    <div className=\"new-game-screen\">\n    <h1>New Game</h1>\n    <NewGameForm {...props} />\n    </div>\n\n\n  )\n}\n","import { NewGameForm } from './NewGameScreen';\n\nexport function PlayerWinScreen(props) {\n\n  return (\n    <div className=\"player-win-screen\">\n    <h1>YOU WIN!</h1>\n    <h3>Again?</h3>\n    <NewGameForm {...props} />\n    </div>\n  )\n}\n","export class GameModel {\n  constructor(size) {\n    this.size = size;\n    this.initPlayerBoard();    \n    this.initTargetBoard();\n  }\n\n  initTargetBoard() {\n    this.targetBoard = [];    \n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        if (Math.random() > 0.65) {\n          row.push('*');          \n        } else {\n          row.push('x');                    \n        }\n      }\n      this.targetBoard.push(row);\n    }\n  }\n\n\n  initPlayerBoard() {\n    this.playerBoard = [];    \n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        row.push('');\n      }\n      this.playerBoard.push(row);\n    }\n  }\n  \n  rowSums(boardName, targetChar) {\n    let result = [];\n    for (let i = 0; i < this.size; i++) {\n      let sum = 0;\n      for (let j = 0; j < this.size; j++) {\n        if (this[boardName][i][j] === targetChar) {\n          sum += (j+1);\n        }\n      }\n      result.push(sum);\n    };\n    return result;\n  }\n  \n  colSums(boardName, targetChar) {\n    let result = [];\n    for (let i = 0; i < this.size; i++) {\n      let sum = 0;\n      for (let j = 0; j < this.size; j++) {\n        if (this[boardName][j][i] === targetChar) {\n          sum += (j+1);\n        }\n      }\n      result.push(sum);\n    };\n    return result;\n    \n  }\n  \n  checkWin(state) {\n      for ( let i = 0; i < state.size; i++) {\n\n        let a = state.rowSums[i];\n        let b = state.targetRowSums[i];\n        if (a !== b) {\n          return false;\n        }\n\n        let c = state.colSums[i];\n        let d = state.targetColSums[i];\n        if (c !== d) {\n          return false;\n        }\n\n        let e = state.antiRowSums[i];\n        let f = state.antiTargetRowSums[i];\n        if (e !== f) {\n          return false;\n        }\n\n\n        let g = state.antiColSums[i];\n        let h = state.antiTargetColSums[i];\n        if (g !== h) {\n          return false;\n        }\n\n      }\n      return true;\n  }\n  \n  export() {\n    const result = {\n      size: this.size,\n      sigma: ((this.size) * (this.size + 1)) / 2,\n      playerBoard: this.playerBoard.map(x => x.slice(0)),\n      rowSums: this.rowSums(\"playerBoard\", \"*\"),\n      colSums: this.colSums(\"playerBoard\", \"*\"),\n      antiRowSums: this.rowSums(\"playerBoard\", \"x\"),\n      antiColSums: this.colSums(\"playerBoard\", \"x\"),\n      targetRowSums: this.rowSums(\"targetBoard\", \"*\"),\n      targetColSums: this.colSums(\"targetBoard\", \"*\"),\n      antiTargetRowSums: this.rowSums(\"targetBoard\", \"x\"),\n      antiTargetColSums: this.colSums(\"targetBoard\", \"x\"),\n    }\n\n    result.wonGame = this.checkWin(result);\n    \n    return result;\n    \n    \n  }\n  \n  debug(boardName=\"playerBoard\") {\n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        row.push(this[boardName][i][j]);\n      }\n      console.log(row);\n    }\n  }\n  \n  toggleSquare(x,y) {\n    if (this.playerBoard[x][y] === \"*\") {\n      this.playerBoard[x][y] = \"x\";\n    } else if (this.playerBoard[x][y] === \"x\") {\n      this.playerBoard[x][y] = \"\";\n    } else if (this.playerBoard[x][y] === \"\") {\n      this.playerBoard[x][y] = \"*\";\n    }\n      \n  }\n\n}","import './App.scss';\nimport { Board } from './Board';\nimport { NewGameScreen } from './NewGameScreen';\nimport { PlayerWinScreen } from './PlayerWinScreen';\nimport { GameModel } from './GameModel';\nimport { useState } from 'react';\n\n\nfunction App() {\n  const model = null;\n  const [ gm, setGm ] = useState(null);\n  const [ viewState, setViewState ] = useState(null);\n\n\n  const onGotoNewGameClick = function() {\n    setGm(null);\n    setViewState(null);\n  }\n  const onSquareClick = function(i,j) {\n    gm.toggleSquare(i,j);\n    gm.debug();\n    setViewState(gm.export());\n  } \n \n  const onNewGame = function(newSize) {\n    const newGm = new GameModel(newSize);\n    setGm(newGm);\n    setViewState(newGm.export());\n  }\n   \n  window.gm = gm;\n  if (viewState === null) {\n    return (\n      <div className=\"container\">\n        <NewGameScreen onNewGame={onNewGame} />\n      </div>\n    );\n  }\n  \n  if (viewState.wonGame) {\n    return (\n      <div className=\"container\">\n        <PlayerWinScreen viewState={viewState} onNewGame={onNewGame} />\n      </div>\n      \n    )\n  }\n  \n  return (\n    <div className=\"container\">\n      <Board size={viewState.size} onSquareClick={onSquareClick} viewState={viewState} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}