{"version":3,"sources":["Board.js","NewGameScreen.js","PlayerWinScreen.js","GameModel.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","content","viewState","playerBoard","row","col","className","onClick","onSquareClick","size","HSquare","i","toggleBoardMode","FSquare","playerVal","colSums","targetVal","targetColSums","antiPlayerVal","antiColSums","content1","content2","antiTargetColSums","boardMode","RowStartSquare","RowEndSquare","rowSums","targetRowSums","antiRowSums","antiTargetRowSums","SigmaSquare","sigma","Header","result","push","Footer","Squares","Board","useState","setBoardMode","LevelOptions","min","max","value","NewGameForm","defaultLevel","Cookies","get","parseFloat","newLevel","setNewLevel","Fragment","onChange","e","currentTarget","set","onNewGame","NewGameScreen","PlayerWinScreen","GameModel","this","initPlayerBoard","initTargetBoard","meta","Array","fill","targetBoard","j","Math","random","x","y","points","length","depth","solveFill","shouldReject","checkWinSolver","console","log","Error","toggleSquareSolver","solve","unSolveFill","boardName","targetChar","sum","a","c","g","map","slice","wonGame","checkWin","timeout","App","gm","setGm","setViewState","newSize","newGm","export","clearInterval","setInterval","window","toggleSquare","debug","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","rel","href","document","getElementById"],"mappings":"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","file":"static/js/main.2e019b6c.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction Square(props) {\n  const content = props.viewState.playerBoard[props.row][props.col];\n  let className = \"\";\n  if (content === \"*\") {\n    className = \"piece piece-on\";\n  } else if (content === \"x\") {\n    className = \"piece piece-off\";\n  } else {\n    className = \"piece piece-blank\"\n  }\n\n  return (\n    <div onClick={()=> { props.onSquareClick(props.row, props.col)}} className={`square square-${props.size}`}>\n      <div className={`piece ${className}`}></div>\n    </div> \n  );\n}\n\nfunction HSquare(props) {\n  let content = \"\";\n  \n  if (props.i > 0 && (props.i < props.size+1)) {\n    content = props.i;\n    return (\n      <div className={`square header-square square-${props.size}`}>{content}</div>\n    );\n  } else {\n    return (\n      <div onClick={props.toggleBoardMode} className={`square flipper-square header-square row-start-square square-${props.size}`}>Flip</div>\n    );    \n  }\n}\n\n\nfunction FSquare(props) {\n  \n  if (props.i > 0 && (props.i < props.size+1)) {\n    const playerVal = props.viewState.colSums[props.i-1];\n    const targetVal = props.viewState.targetColSums[props.i-1];\n\n    const antiPlayerVal = props.viewState.antiColSums[props.i -1];\n    const antiTargetVal = props.viewState.antiTargetColSums[props.i - 1];\n\n    const content1 = targetVal - playerVal;\n    const content2 = antiTargetVal- antiPlayerVal;\n    \n    if (props.boardMode) {\n      return (\n        <div className={`square footer-square square-${props.size}`}>\n          <div className=\"score-on\">{content1}</div>\n        </div> \n      );\n    \n    } else {\n      return (\n        <div className={`square footer-square square-${props.size}`}>\n          <div className=\"score-off\">{content2}</div>\n        </div> \n      );\n      \n    }\n    \n  }\n\n\n  if (props.i === 0) {\n    return (\n      <div className={`square footer-square row-start-square square-${props.size}`}></div> \n    ); \n  }\n\n  return (\n    <div className={`square footer-square row-end-square square-${props.size}`}></div> \n  );\n}\n\n\nfunction RowStartSquare(props) {\n  return (\n    <div className={`square row-start-square square-${props.size}`}>{props.i}</div> \n  );\n}\n\nfunction RowEndSquare(props) {\n  const playerVal = props.viewState.rowSums[props.row];\n  const targetVal = props.viewState.targetRowSums[props.row];\n  const antiPlayerVal = props.viewState.antiRowSums[props.row];\n  const antiTargetVal = props.viewState.antiTargetRowSums[props.row];\n\n\n  const content1 = targetVal - playerVal;\n  const content2 = antiTargetVal- antiPlayerVal;\n\n  if (props.boardMode) {\n    return (\n      <div className={`square row-end-square square-${props.size}`}>\n        <div className=\"score-on\">{content1}</div>\n      </div> \n    );    \n  } else {\n    return (\n      <div className={`square row-end-square square-${props.size}`}>\n        <div className=\"score-off\">{content2}</div>\n      </div> \n    );        \n  }\n\n}\n\n\nfunction SigmaSquare(props) {\n  return (\n    <div className={`square sigma-square row-end-square header-square square-${props.size}`}>&Sigma;{props.viewState.sigma}</div>    \n  );\n}\n\nfunction Header(props) {\n  let result = [];\n  for (let i = 0; i < props.size +1; i++) {\n    result.push(<HSquare key={`hs${i}`} i={i} {...props} />);\n  }\n  result.push(<SigmaSquare key={`hssigma`} {...props} />);\n  return result;\n};\n\nfunction Footer(props) {\n  let result = [];\n  for (let i = 0; i < props.size +2; i++) {\n    result.push(<FSquare key={`fs${i}`} i={i} {...props} />);\n  }\n  return result;\n};\n\nfunction Squares(props) {\n  let result = [ <Header key={\"headerSquares\"} {...props} />];\n  for (let i = 0; i < (props.size + 2)*(props.size); i++) {\n    const col = i % (props.size + 2);\n    const row = (i - col) / (props.size + 2);\n    if (col === 0) {\n      result.push(<RowStartSquare key={`rss${i}`} i={row+1} {...props} />);    \n    } else if (col === (props.size + 1)) {\n      result.push(<RowEndSquare key={`res${row}`} row={row} {...props} />);    \n    } else {\n      result.push(<Square key={`reg${i}`} i={i} row={row} col={col-1} {...props} />);\n    }\n  }\n  return [...result, <Footer key={\"footerSquares\"} {...props} />];\n}\n\nexport function Board(props) {\n  \n  const [ boardMode, setBoardMode ] = useState(true);\n  \n  const toggleBoardMode = () => {\n    setBoardMode(!boardMode);\n  };\n  \n  \n  return (\n    <div className=\"board\">\n      <Squares {...props} boardMode={boardMode} toggleBoardMode={toggleBoardMode} />\n    </div>\n  )\n}\n\n","import { useState } from 'react';\nimport React from 'react';\nimport Cookies from 'js-cookie';\n\n\nfunction LevelOptions(props) {\n  let result = [];\n  for (let i = props.min; i <= props.max; i++) {\n      result.push(\n        <option key={i} value={i}>{i}x{i}</option>\n      )\n  }\n  return result;\n}\n\n\nexport function NewGameForm(props) {\n  \n  const defaultLevel = Cookies.get('defaultLevel') || 6;\n  \n  const [ newLevel, setNewLevel ] = useState(parseFloat(defaultLevel));\n\n    return (\n      <React.Fragment>\n        <select value={newLevel} onChange={(e)=> { setNewLevel(parseFloat(e.currentTarget.value)); Cookies.set('defaultLevel', e.currentTarget.value) }} >\n          <LevelOptions min={3} max={13} />\n        </select>\n        <button onClick={()=> { props.onNewGame(newLevel)}}>Play</button>\n      </React.Fragment>\n      \n    )\n}\n\n\nexport function NewGameScreen(props) {\n\n\n  return (\n    <div className=\"new-game-screen\">\n    <h1>New Game</h1>\n    <NewGameForm {...props} />\n    </div>\n\n\n  )\n}\n","import { NewGameForm } from './NewGameScreen';\n\nexport function PlayerWinScreen(props) {\n\n  return (\n    <div className=\"player-win-screen\">\n    <h1>YOU WIN!</h1>\n    <h3>Again?</h3>\n    <NewGameForm {...props} />\n    </div>\n  )\n}\n","export class GameModel {\n  constructor(size) {\n    this.size = size;\n    this.initPlayerBoard();    \n    this.initTargetBoard();\n    this.meta = {\n      size,\n      sigma: ((this.size) * (this.size + 1)) / 2,\n      targetRowSums: this.rowSums(\"targetBoard\", \"*\"),\n      targetColSums: this.colSums(\"targetBoard\", \"*\"),\n      antiTargetRowSums: this.rowSums(\"targetBoard\", \"x\"),\n      antiTargetColSums: this.colSums(\"targetBoard\", \"x\"), \n      rowSums:     Array(this.size).fill(0),\n      colSums:     Array(this.size).fill(0),\n      antiRowSums: Array(this.size).fill(0),\n      antiColSums: Array(this.size).fill(0),      \n    }\n  }\n\n  initTargetBoard() {\n    this.targetBoard = [];    \n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        if (Math.random() > 0.70) {\n          row.push('*');          \n        } else {\n          row.push('x');                    \n        }\n      }\n      this.targetBoard.push(row);\n    }\n  }\n\n  // Takes the previous move and sees if we can short-circuit some options...\n  solveFill(x,y) {\n    const points = [];\n    if (this.meta.rowSums[x] === this.meta.targetRowSums[x]) {\n      for (let i = 0; i < this.size; i++) {\n        if (this.playerBoard[x][i] === \"\") {\n          this.playerBoard[x][i] = \"x\";\n          points.push([x,i]);\n        }\n      }  \n    }\n\n    if (this.meta.colSums[y] === this.meta.targetColSums[y]) {\n      for (let i = 0; i < this.size; i++) {\n        if (this.playerBoard[i][y] === \"\") {\n          this.playerBoard[i][y] = \"x\";\n          points.push([i,y]);\n        }\n      }  \n    }\n    return points;\n  }\n  \n  \n  unSolveFill(points) {\n    for (let i = 0; i < points.length; i++) {\n      this.playerBoard[points[i][0]][points[i][1]] = \"\";\n    }\n  }\n\n  // todo\n  solve(depth = 0) {\n    if (depth === 0) {\n      for (let i = 0; i < this.size; i++) {\n        this.solveFill(0,i);\n      }\n    }\n    \n    if (this.shouldReject()) {\n      return;\n    }\n\n    if (this.checkWinSolver()) {\n      console.log(\"solution\");\n      throw Error(\"BLARG\");\n      this.debug();\n    }\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.playerBoard[i][j] === \"\") {\n          this.toggleSquareSolver(i,j);\n          const points = this.solveFill(i,j);\n          this.solve(depth+1);\n          this.unSolveFill(points);\n          this.toggleSquareSolver(i,j);\n        }      \n      }      \n    }\n    \n    if (depth === 0) {\n      console.log(\"Solver Complete\");\n    }\n    \n  }\n\n\n  initPlayerBoard() {\n    this.playerBoard = [];    \n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        row.push('');\n      }\n      this.playerBoard.push(row);\n    }\n  }\n  \n  rowSums(boardName, targetChar) {\n    let result = [];\n    for (let i = 0; i < this.size; i++) {\n      let sum = 0;\n      for (let j = 0; j < this.size; j++) {\n        if (this[boardName][i][j] === targetChar) {\n          sum += (j+1);\n        }\n      }\n      result.push(sum);\n    };\n    return result;\n  }\n  \n  colSums(boardName, targetChar) {\n    let result = [];\n    for (let i = 0; i < this.size; i++) {\n      let sum = 0;\n      for (let j = 0; j < this.size; j++) {\n        if (this[boardName][j][i] === targetChar) {\n          sum += (j+1);\n        }\n      }\n      result.push(sum);\n    };\n    return result;\n    \n  }\n  \n  \n  \n  shouldReject() {\n      for ( let i = 0; i < this.meta.rowSums.length; i++) {\n\n        let a = this.meta.rowSums[i];\n        let b = this.meta.targetRowSums[i];\n        if (b-a < 0) {\n          return true;\n        }\n\n        let c = this.meta.colSums[i];\n        let d = this.meta.targetColSums[i];\n        if (d-c < 0) {\n          return true;\n        }\n\n        let e = this.meta.antiRowSums[i];\n        let f = this.meta.antiTargetRowSums[i];\n        if (f-e < 0) {\n          return true;\n        }\n\n\n        let g = this.meta.antiColSums[i];\n        let h = this.meta.antiTargetColSums[i];\n        if (h-g < 0) {\n          return true;\n        }\n      }\n      return false;\n  }\n  \n  checkWin() {\n      for ( let i = 0; i < this.meta.rowSums.length; i++) {\n\n        let a = this.meta.rowSums[i];\n        let b = this.meta.targetRowSums[i];\n        if (a !== b) {\n          return false;\n        }\n\n        let c = this.meta.colSums[i];\n        let d = this.meta.targetColSums[i];\n        if (c !== d) {\n          return false;\n        }\n\n        let e = this.meta.antiRowSums[i];\n        let f = this.meta.antiTargetRowSums[i];\n        if (e !== f) {\n          return false;\n        }\n\n\n        let g = this.meta.antiColSums[i];\n        let h = this.meta.antiTargetColSums[i];\n        if (g !== h) {\n          return false;\n        }\n\n      }\n      return true;\n  }\n  \n  \n  checkWinSolver() {\n      for ( let i = 0; i < this.meta.rowSums.length; i++) {\n\n        let a = this.meta.rowSums[i];\n        let b = this.meta.targetRowSums[i];\n        if (a !== b) {\n          return false;\n        }\n\n        let c = this.meta.colSums[i];\n        let d = this.meta.targetColSums[i];\n        if (c !== d) {\n          return false;\n        }\n\n      }\n      return true;\n  }\n  \n  \n  export() {\n    return {\n      ...this.meta,\n      playerBoard: this.playerBoard.map(x => x.slice(0)),\n      wonGame: this.checkWin()\n    }    \n  }\n  \n  debug(boardName=\"playerBoard\") {\n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        row.push(this[boardName][i][j]);\n      }\n      console.log(row);\n    }\n  }\n  \n  toggleSquareSolver(x,y) {\n    if (this.playerBoard[x][y] === \"\") {\n      this.playerBoard[x][y] = \"*\";\n      this.meta.rowSums[x]     += (y+1);\n      this.meta.colSums[y]     += (x+1);      \n    } else {\n      this.playerBoard[x][y] = \"\";\n      this.meta.rowSums[x]     -= (y+1);\n      this.meta.colSums[y]     -= (x+1);            \n    }\n  }\n  \n  toggleSquare(x,y) {\n    console.log(x,y);\n    if (this.playerBoard[x][y] === \"*\") {\n\n      this.meta.rowSums[x]     -= (y+1);\n      this.meta.colSums[y]     -= (x+1);\n      this.meta.antiRowSums[x] += (y+1);\n      this.meta.antiColSums[y] += (x+1);    \n      this.playerBoard[x][y] = \"x\";\n\n    } else if (this.playerBoard[x][y] === \"x\") {\n      this.meta.antiRowSums[x] -= (y+1);\n      this.meta.antiColSums[y] -= (x+1);    \n\n      this.playerBoard[x][y] = \"\";\n    } else if (this.playerBoard[x][y] === \"\") {\n      this.meta.rowSums[x]     += (y+1);\n      this.meta.colSums[y]     += (x+1);\n\n      this.playerBoard[x][y] = \"*\";\n    }\n      \n  }\n\n}","import './App.scss';\nimport { Board } from './Board';\nimport { NewGameScreen } from './NewGameScreen';\nimport { PlayerWinScreen } from './PlayerWinScreen';\nimport { GameModel } from './GameModel';\nimport { useState } from 'react';\n\n\nlet timeout = null;\n\nfunction App() {\n  const model = null;\n  const [ gm, setGm ] = useState(null);\n  const [ viewState, setViewState ] = useState(null);\n\n\n  const onGotoNewGameClick = function() {\n    setGm(null);\n    setViewState(null);\n  }\n  const onSquareClick = function(i,j) {\n    gm.toggleSquare(i,j);\n    gm.debug();\n    setViewState(gm.export());\n  } \n \n  const onNewGame = function(newSize) {\n    const newGm = new GameModel(newSize);\n    setGm(newGm);\n    setViewState(newGm.export());\n    clearInterval(timeout);\n    timeout = setInterval(() => { setViewState(newGm.export()); }, 500);\n  }\n   \n  window.gm = gm;\n  if (viewState === null) {\n    return (\n      <div className=\"container\">\n        <NewGameScreen onNewGame={onNewGame} />\n      </div>\n    );\n  }\n  \n  if (viewState.wonGame) {\n    return (\n      <div className=\"container\">\n        <PlayerWinScreen viewState={viewState} onNewGame={onNewGame} />\n      </div>\n      \n    )\n  }\n  \n  return (\n    <div className=\"container\">\n      <Board size={viewState.size} onSquareClick={onSquareClick} viewState={viewState} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link href=\"https://fonts.googleapis.com/css2?family=Texturina:wght@100&display=swap\" rel=\"stylesheet\" />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}