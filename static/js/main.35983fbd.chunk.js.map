{"version":3,"sources":["Board.js","NewGameScreen.js","PlayerWinScreen.js","GameModel.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","content","viewState","playerBoard","row","col","className","onClick","onSquareClick","size","HSquare","i","FSquare","playerVal","colSums","targetVal","targetColSums","antiPlayerVal","antiColSums","content1","content2","antiTargetColSums","RowStartSquare","RowEndSquare","rowSums","targetRowSums","antiRowSums","antiTargetRowSums","SigmaSquare","sigma","Header","result","push","Footer","Squares","Board","LevelOptions","min","max","value","NewGameScreen","useState","newLevel","setNewLevel","onChange","e","parseFloat","currentTarget","onNewGame","PlayerWinScreen","onGotoNewGameClick","GameModel","this","initPlayerBoard","initTargetBoard","targetBoard","j","Math","random","boardName","targetChar","sum","state","map","x","slice","wonGame","checkWin","console","log","y","App","gm","setGm","setViewState","window","newSize","newGm","export","toggleSquare","debug","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35983fbd.chunk.js","sourcesContent":["function Square(props) {\n  const content = props.viewState.playerBoard[props.row][props.col];\n  let className = \"\";\n  if (content === \"*\") {\n    className = \"piece piece-on\";\n  } else if (content === \"x\") {\n    className = \"piece piece-off\";\n  } else {\n    className = \"piece piece-blank\"\n  }\n\n  return (\n    <div onClick={()=> { props.onSquareClick(props.row, props.col)}} className={`square square-${props.size}`}>\n      <div onClick={()=> { props.onSquareClick(props.row, props.col)}} className={`piece ${className}`}></div>\n    </div> \n  );\n}\n\nfunction HSquare(props) {\n  let content = \"\";\n  \n  if (props.i > 0 && (props.i < props.size+1)) {\n    content = props.i;\n    return (\n      <div className={`square header-square square-${props.size}`}>{content}</div>\n    );\n  } else {\n    return (\n      <div className={`square header-square square-${props.size}`}>{content}</div>\n    );    \n  }\n}\n\n\nfunction FSquare(props) {\n  \n  if (props.i > 0 && (props.i < props.size+1)) {\n    const playerVal = props.viewState.colSums[props.i-1];\n    const targetVal = props.viewState.targetColSums[props.i-1];\n\n    const antiPlayerVal = props.viewState.antiColSums[props.i -1];\n    const antiTargetVal = props.viewState.antiTargetColSums[props.i - 1];\n\n    const content1 = targetVal - playerVal;\n    const content2 = antiTargetVal- antiPlayerVal;\n    \n    return (\n      <div className={`square footer-square square-${props.size}`}>\n      <div className=\"score-on\">{content1}</div>\n      <br/>\n      <div className=\"score-off\">{content2}</div>\n      </div> \n    );\n\n  }\n\n\n  return (\n    <div className={`square footer-square square-${props.size}`}></div> \n  );\n}\n\n\nfunction RowStartSquare(props) {\n  return (\n    <div className={`square row-start-square square-${props.size}`}>{props.i}</div> \n  );\n}\n\nfunction RowEndSquare(props) {\n  const playerVal = props.viewState.rowSums[props.row];\n  const targetVal = props.viewState.targetRowSums[props.row];\n  const antiPlayerVal = props.viewState.antiRowSums[props.row];\n  const antiTargetVal = props.viewState.antiTargetRowSums[props.row];\n\n\n  const content1 = targetVal - playerVal;\n  const content2 = antiTargetVal- antiPlayerVal;\n\n  return (\n    <div className={`square row-end-square square-${props.size}`}>\n    <div className=\"score-on\">{content1}</div>\n    <br/>\n    <div className=\"score-off\">{content2}</div>\n    </div> \n  );\n}\n\n\nfunction SigmaSquare(props) {\n  return (\n    <div className={`square header-square square-${props.size}`}>&Sigma; {props.viewState.sigma}</div>    \n  );\n}\n\nfunction Header(props) {\n  let result = [];\n  for (let i = 0; i < props.size +1; i++) {\n    result.push(<HSquare key={`hs${i}`} i={i} {...props} />);\n  }\n  result.push(<SigmaSquare {...props} />);\n  return result;\n};\n\nfunction Footer(props) {\n  let result = [];\n  for (let i = 0; i < props.size +2; i++) {\n    result.push(<FSquare key={`fs${i}`} i={i} {...props} />);\n  }\n  return result;\n};\n\nfunction Squares(props) {\n  let result = [ <Header key={\"headerSquares\"} {...props} />];\n  for (let i = 0; i < (props.size + 2)*(props.size); i++) {\n    const col = i % (props.size + 2);\n    const row = (i - col) / (props.size + 2);\n    if (col === 0) {\n      result.push(<RowStartSquare key={`rss${i}`} i={row+1} {...props} />);    \n    } else if (col === (props.size + 1)) {\n      result.push(<RowEndSquare key={`res${row}`} row={row} {...props} />);    \n    } else {\n      result.push(<Square key={`reg${i}`} i={i} row={row} col={col-1} {...props} />);\n    }\n  }\n  return [...result, <Footer key={\"footerSquares\"} {...props} />];\n}\n\nexport function Board(props) {\n  return (\n    <div className=\"board\">\n      <Squares {...props} />\n    </div>\n  )\n}\n\n","import { useState } from 'react';\n\nfunction LevelOptions(props) {\n  let result = [];\n  for (let i = props.min; i <= props.max; i++) {\n      result.push(\n        <option value={i}>{i}x{i}</option>\n      )\n  }\n  return result;\n}\n\n\nexport function NewGameScreen(props) {\n\n  const [ newLevel, setNewLevel ] = useState(5);\n\n  return (\n    <div className=\"new-game-screen\">\n    <h1>New Game Level </h1>\n    \n    <select value={newLevel} onChange={(e)=> { setNewLevel(parseFloat(e.currentTarget.value)); }} >\n      <LevelOptions min={2} max={13} />\n    </select>\n\n    <button onClick={()=> { props.onNewGame(newLevel)}}>Go!</button>\n    </div>\n\n\n  )\n}\n","import { useState } from 'react';\n\n\nexport function PlayerWinScreen(props) {\n\n  const [ newLevel, setNewLevel ] = useState(5);\n\n  return (\n    <div className=\"player-win-screen\">\n    <h1>YOU WIN!</h1>\n    <h5>Again?</h5>\n    <button onClick={props.onGotoNewGameClick}>One more game?</button>\n    </div>\n\n\n  )\n}\n","export class GameModel {\n  constructor(size) {\n    this.size = size;\n    this.initPlayerBoard();    \n    this.initTargetBoard();\n  }\n\n  initTargetBoard() {\n    this.targetBoard = [];    \n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        if (Math.random() > 0.65) {\n          row.push('*');          \n        } else {\n          row.push('x');                    \n        }\n      }\n      this.targetBoard.push(row);\n    }\n  }\n\n\n  initPlayerBoard() {\n    this.playerBoard = [];    \n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        row.push('');\n      }\n      this.playerBoard.push(row);\n    }\n  }\n  \n  rowSums(boardName, targetChar) {\n    let result = [];\n    for (let i = 0; i < this.size; i++) {\n      let sum = 0;\n      for (let j = 0; j < this.size; j++) {\n        if (this[boardName][i][j] === targetChar) {\n          sum += (j+1);\n        }\n      }\n      result.push(sum);\n    };\n    return result;\n  }\n  \n  colSums(boardName, targetChar) {\n    let result = [];\n    for (let i = 0; i < this.size; i++) {\n      let sum = 0;\n      for (let j = 0; j < this.size; j++) {\n        if (this[boardName][j][i] === targetChar) {\n          sum += (j+1);\n        }\n      }\n      result.push(sum);\n    };\n    return result;\n    \n  }\n  \n  checkWin(state) {\n      for ( let i = 0; i < state.size; i++) {\n        let a = state.rowSums[i];\n        let b = state.targetRowSums[i];\n        if (a !== b) {\n          return false;\n        }\n        let c = state.colSums[i];\n        let d = state.targetColSums[i];\n        if (c !== d) {\n          return false;\n        }\n      }\n      return true;\n  }\n  \n  export() {\n    const result = {\n      size: this.size,\n      sigma: ((this.size) * (this.size + 1)) / 2,\n      playerBoard: this.playerBoard.map(x => x.slice(0)),\n      rowSums: this.rowSums(\"playerBoard\", \"*\"),\n      colSums: this.colSums(\"playerBoard\", \"*\"),\n      antiRowSums: this.rowSums(\"playerBoard\", \"x\"),\n      antiColSums: this.colSums(\"playerBoard\", \"x\"),\n      targetRowSums: this.rowSums(\"targetBoard\", \"*\"),\n      targetColSums: this.colSums(\"targetBoard\", \"*\"),\n      antiTargetRowSums: this.rowSums(\"targetBoard\", \"x\"),\n      antiTargetColSums: this.colSums(\"targetBoard\", \"x\"),\n    }\n\n    result.wonGame = this.checkWin(result);\n    \n    return result;\n    \n    \n  }\n  \n  debug(boardName=\"playerBoard\") {\n    for (let i = 0; i < this.size; i++) {\n      let row = [];\n      for (let j = 0; j < this.size; j++) {\n        row.push(this[boardName][i][j]);\n      }\n      console.log(row);\n    }\n  }\n  \n  toggleSquare(x,y) {\n    if (this.playerBoard[x][y] === \"*\") {\n      this.playerBoard[x][y] = \"x\";\n    } else if (this.playerBoard[x][y] === \"x\") {\n      this.playerBoard[x][y] = \"\";\n    } else if (this.playerBoard[x][y] === \"\") {\n      this.playerBoard[x][y] = \"*\";\n    }\n      \n  }\n\n}","import './App.css';\nimport { Board } from './Board';\nimport { NewGameScreen } from './NewGameScreen';\nimport { PlayerWinScreen } from './PlayerWinScreen';\nimport { GameModel } from './GameModel';\nimport { useState } from 'react';\n\n\nfunction App() {\n  const model = null;\n  const [ gm, setGm ] = useState(null);\n  const [ viewState, setViewState ] = useState(null);\n\n\n  const onGotoNewGameClick = function() {\n    setGm(null);\n    setViewState(null);\n  }\n  const onSquareClick = function(i,j) {\n    gm.toggleSquare(i,j);\n    gm.debug();\n    setViewState(gm.export());\n  } \n \n  const onNewGame = function(newSize) {\n    const newGm = new GameModel(newSize);\n    setGm(newGm);\n    setViewState(newGm.export());\n  }\n   \n  window.gm = gm;\n  if (viewState === null) {\n    return (\n      <div className=\"container\">\n        <NewGameScreen onNewGame={onNewGame} />\n      </div>\n    );\n  }\n  \n  if (viewState.wonGame) {\n    return (\n      <div className=\"container\">\n        <PlayerWinScreen viewState={viewState} onGotoNewGameClick={onGotoNewGameClick} />\n      </div>\n      \n    )\n  }\n  \n  return (\n    <div className=\"container\">\n      <Board size={viewState.size} onSquareClick={onSquareClick} viewState={viewState} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}