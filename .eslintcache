[{"C:\\Users\\SBlac\\kakurasu\\src\\index.js":"1","C:\\Users\\SBlac\\kakurasu\\src\\Board.js":"2","C:\\Users\\SBlac\\kakurasu\\src\\App.js":"3","C:\\Users\\SBlac\\kakurasu\\src\\GameModel.js":"4"},{"size":500,"mtime":1606613995142,"results":"5","hashOfConfig":"6"},{"size":2584,"mtime":1606622896640,"results":"7","hashOfConfig":"6"},{"size":597,"mtime":1606623450438,"results":"8","hashOfConfig":"6"},{"size":1567,"mtime":1606623414703,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vfvast",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SBlac\\kakurasu\\src\\index.js",[],"C:\\Users\\SBlac\\kakurasu\\src\\Board.js",["19","20"],"function Square(props) {\n  const content = props.viewState.playerBoard[props.row][props.col];\n  let className = \"\";\n  if (content == \"*\") {\n    className = \"piece piece-on\";\n  } else if (content == \"x\") {\n    className = \"piece piece-off\";\n  } else {\n    className = \"piece piece-blank\"\n  }\n\n  return (\n    <div onClick={()=> { props.onSquareClick(props.row, props.col)}} className={`square square-${props.size}`}>\n      <div onClick={()=> { props.onSquareClick(props.row, props.col)}} className={`piece ${className}`}></div>\n    </div> \n  );\n}\n\nfunction HSquare(props) {\n  let content = \"\";\n  \n  if (props.i > 0 && (props.i < props.size+1)) {\n    content = props.i;\n    return (\n      <div className={`square header-square square-${props.size}`}>{content}</div>\n    );\n  } else {\n    return (\n      <div className={`square header-square square-${props.size}`}>{content}</div>\n    );    \n  }\n}\n\n\nfunction FSquare(props) {\n  let content = \"\";\n  if (props.i > 0 && (props.i < props.size+1)) {\n    content = props.viewState.colSums[props.i-1];\n  }\n\n  return (\n    <div className={`square footer-square square-${props.size}`}>{content}</div> \n  );\n}\n\n\nfunction RowStartSquare(props) {\n  return (\n    <div className={`square row-start-square square-${props.size}`}>{props.i}</div> \n  );\n}\n\nfunction RowEndSquare(props) {\n  \n  const content = props.viewState.rowSums[props.row];\n\n  \n  return (\n    <div className={`square row-end-square square-${props.size}`}>{content}</div> \n  );\n}\n\n\n\nfunction Header(props) {\n  let result = [];\n  for (let i = 0; i < props.size +2; i++) {\n    result.push(<HSquare key={`hs${i}`} i={i} {...props} />);\n  }\n  return result;\n};\n\nfunction Footer(props) {\n  let result = [];\n  for (let i = 0; i < props.size +2; i++) {\n    result.push(<FSquare key={`fs${i}`} i={i} {...props} />);\n  }\n  return result;\n};\n\nfunction Squares(props) {\n  let result = [ <Header key={\"headerSquares\"} {...props} />];\n  for (let i = 0; i < (props.size + 2)*(props.size); i++) {\n    const col = i % (props.size + 2);\n    const row = (i - col) / (props.size + 2);\n    if (col === 0) {\n      result.push(<RowStartSquare key={`rss${i}`} i={row+1} {...props} />);    \n    } else if (col === (props.size + 1)) {\n      result.push(<RowEndSquare key={`res${row}`} row={row} {...props} />);    \n    } else {\n      result.push(<Square key={`reg${i}`} i={i} row={row} col={col-1} {...props} />);\n    }\n  }\n  return [...result, <Footer key={\"footerSquares\"} {...props} />];\n}\n\nexport function Board(props) {\n  return (\n    <div className=\"board\">\n      <Squares {...props} />\n    </div>\n  )\n}\n\n","C:\\Users\\SBlac\\kakurasu\\src\\App.js",["21"],"C:\\Users\\SBlac\\kakurasu\\src\\GameModel.js",[],{"ruleId":"22","severity":1,"message":"23","line":4,"column":15,"nodeType":"24","messageId":"25","endLine":4,"endColumn":17},{"ruleId":"22","severity":1,"message":"23","line":6,"column":22,"nodeType":"24","messageId":"25","endLine":6,"endColumn":24},{"ruleId":"26","severity":1,"message":"27","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":12},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]